name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: "file:./prisma/dev.db"
      DEBUG: "prisma:*"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Debug environment
        run: |
          echo "Current directory: $(pwd)"
          echo "Directory listing:"
          ls -la
          echo "Environment variables:"
          env | grep -v "SECRET"
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"
          
      - name: Prepare content directories
        run: |
          # Ensure drafts directory exists with proper structure
          mkdir -p drafts/in-progress drafts/published drafts/ideas
          
          # No need to copy README.md to itself - it's already in the right place
          # Just check if it exists for debugging
          if [ -f "drafts/README.md" ]; then
            echo "drafts/README.md exists"
          else
            echo "drafts/README.md does not exist"
          fi
          
          # Debug prisma directory
          echo "Prisma directory before:"
          ls -la prisma/ || echo "No prisma directory"
          echo "Prisma migrations before:"
          ls -la prisma/migrations/ || echo "No migrations directory"
          
          # Create empty database
          touch prisma/dev.db
          
          # Debug
          echo "Content directories created:"
          ls -la drafts/
          echo "Prisma directory after:"
          ls -la prisma/
          echo "Prisma migrations after:"
          ls -la prisma/migrations/ || echo "No migrations directory"
          
          # Debug TypeScript configuration
          echo "TypeScript configuration:"
          cat tsconfig.json || echo "No tsconfig.json found"
          echo "TypeScript scripts configuration:"
          cat tsconfig.scripts.json || echo "No tsconfig.scripts.json found"
        
      - name: Compile TypeScript scripts
        run: |
          # Compile TypeScript scripts to JavaScript
          echo "Compiling TypeScript scripts..."
          npx tsc -p tsconfig.scripts.json
          
          # Debug compiled scripts
          echo "Compiled scripts:"
          ls -la dist/scripts/ || echo "No compiled scripts found"
        
      - name: Import content
        run: |
          # Create SQLite database and import content
          echo "Running Prisma migrations..."
          npx prisma migrate deploy
          
          echo "Importing posts..."
          node --experimental-specifier-resolution=node dist/scripts/import-posts.js
          
          echo "Importing drafts..."
          node --experimental-specifier-resolution=node dist/scripts/import-drafts.js
          
          echo "Database content after import:"
          npx prisma studio --browser none || echo "Could not start Prisma Studio"
          
      - name: Build
        run: npm run build
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out
          
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 