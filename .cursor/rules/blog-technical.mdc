---
description: Technical guidelines for blog development and maintenance
globs: *.html, *.css, *.js
alwaysApply: false
---
# Blog Technical Guidelines

## Code Conventions
- Use TypeScript for type safety
- Follow Next.js App Router conventions
- Use Tailwind CSS for styling
- Maintain consistent component structure
- Use ESLint and Prettier for code formatting
- Follow React best practices for component composition

## Database and Content Management
- Use Prisma ORM for database interactions
- SQLite database for local development
- Models include Posts, Drafts, and Tags
- Use Prisma Studio for database management: `npm run db:studio`
- Database migrations should be committed to version control

## Performance Considerations
- Use Next.js Image component for optimized images
- Implement proper code splitting with dynamic imports when needed
- Optimize for Core Web Vitals
- Keep external dependencies to a minimum
- Use static generation for content pages when possible

## Analytics
- Google Analytics tracking is implemented in the GoogleAnalytics component
- The component is included in the root layout.tsx file
- Analytics respects user privacy settings
- See `src/components/analytics/GoogleAnalytics.tsx` for implementation

## Component Structure
- Use functional components with TypeScript interfaces
- Organize components by category in the components directory
- UI components should be in `src/components/ui`
- Layout components should be in `src/components/layout`
- Use proper prop typing for all components
- Implement responsive design using Tailwind breakpoints

## Next.js Configuration
- Static export is configured in next.config.ts
- Redirects are configured for backward compatibility
- Tailwind CSS is configured in tailwind.config.js
- Environment variables are managed in .env file
- TypeScript configuration is in tsconfig.json
